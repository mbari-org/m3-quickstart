var u=Object.defineProperty;var m=(o,e,t)=>e in o?u(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var i=(o,e,t)=>m(o,typeof e!="symbol"?e+"":e,t);import{j as l,B as f,l as a,C as h,k as c}from"./index-Bzw5iiEC.js";import{e as p}from"./query-results-DX3PRUWY.js";class C{constructor(e){i(this,"url");i(this,"maxBytes",1e11);this.url=e}findConcurrentMedia(e){const t=`${this.url}/media/concurrent/${encodeURIComponent(e)}`;return fetch(t,{mode:"cors"}).then(n=>n.json())}findMediaByUri(e){const t=`${this.url}/media/uri/${encodeURIComponent(e)}`;return fetch(t,{mode:"cors"}).then(n=>n.json())}findMediaByVideoReferenceUuid(e){const t=`${this.url}/media/videoreference/${encodeURIComponent(e)}`;return fetch(t,{mode:"cors"}).then(n=>n.json())}findMediaByVideoSequenceName(e){const t=`${this.url}/media/videosequence/${encodeURIComponent(e)}`;return fetch(t,{mode:"cors"}).then(n=>n.json())}findMediaByCameraIdAndTimestamp(e,t){const n=p(t),r=`${this.url}/media/camera/${encodeURIComponent(e)}/${n}`;return fetch(r,{mode:"cors"}).then(s=>s.json())}findSmallestConcurrentMp4(e,t){return console.log("findSmallestConcurrentMp4",e,t),this.findMediaByCameraIdAndTimestamp(e,t).then(n=>n&&n.length>0?n.filter(r=>r.uri.toLowerCase().endsWith(".mp4")).sort((r,s)=>(s.size_bytes??this.maxBytes)-(r.size_bytes??this.maxBytes))[0]:{})}findPreviewMediaByUriAndTimestamp(e,t){return this.findMediaByUri(e).then(n=>this.findSmallestConcurrentMp4(n.camera_id,t)).then(n=>{let r=0;if(n&&n.start_timestamp&&t){const s=new Date(t),d=new Date(n.start_timestamp);r=(s.getTime()-d.getTime())/1e3}return{media:n,seekTimeSeconds:r}})}findVideoByVideoReferenceUuid(e){const t=`${this.url}/videos/videoreference/${encodeURIComponent(e)}`;return fetch(t,{mode:"cors"}).then(n=>n.json())}listVideoSequenceNames(){const e=`${this.url}/videosequences/names`;return fetch(e,{mode:"cors"}).then(t=>t.json())}listCameraPlatforms(){const e=`${this.url}/videosequences/cameras`;return fetch(e,{mode:"cors"}).then(t=>t.json())}}const v=l("vampire-squid",()=>{const o=f(),e=a(()=>h("vampire-squid",o.config)),t=a(()=>new C(e.value)),n=c(async()=>t.value.listVideoSequenceNames()),r=c(async()=>t.value.listCameraPlatforms());return{url:e,api:t,videoSequenceNames:n,cameraPlatforms:r}});export{v as u};
