var P=Object.defineProperty;var $=(t,e,n)=>e in t?P(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var h=(t,e,n)=>$(t,typeof e!="symbol"?e+"":e,n);import{j as l,B as D,l as f,C as k,k as m,r as a}from"./index-BzskY33X.js";import{l as v,_ as E,u as V}from"./query-results-DSvhyGAo.js";function z(t){const e=[];return t.forEach(n=>w(n,e)),[...new Set(e)].sort()}function w(t,e=[]){return e.push(t.name),e.push(...t.alternativeNames||[]),t.children&&t.children.forEach(n=>w(n,e)),e}function C(t){const e=t.reduce((n,s)=>j(s,n),[]);return[...new Set(e)].sort()}function j(t,e){return e.push(t.name),e.push(...t.alternateNames||[]),e}function F(t){if(t){const e=v.sortBy(t,n=>n.name);return v.sortedUniqBy(e,n=>n.name)}return t}const S=["dsg-depth-distribution","dsg-range"],N=["dsg-size","dsg-color","dsg-shape","dsg-description"],x=["dsg-reference"],_=["dsg-consulting-taxonomist"];function J(t){return t?t.map(e=>{let n=e.linkName;return e.linkName.startsWith("dsg-")&&(n=e.linkName.substring(4)),{displayedName:n.split("-").join(" "),linkValue:e.linkValue,linkName:e.linkName,toConcept:e.toConcept}}):[]}function p(t,e){if(t&&t.descriptors){let n=t.descriptors.filter(s=>e(s));return n=v.sortBy(n,s=>s.linkName),J(n)}return[]}function M(t,e){t.forEach(n=>{e.has(n.linkName)&&(n.displayedName=e.get(n.linkName))})}class K{constructor(e){h(this,"concept");this.concept=e}names(){const e=j(this.concept,[]);return[...new Set(e)].sort()}author(){const e=this.concept;if(e!=null&&e.author){const n=e.author;return n!=null&&n.startsWith("(")?n:`(${n})`}return""}primaryMedia(e){const n=this.concept;let s=e;if(n&&n.media&&n.media.length>0){const i=n.media.filter(o=>o.isPrimary);i.length>0&&(s=i[0].url)}return s}hasImages(){return this.concept&&this.concept.media&&this.concept.media.length>0}images(e=""){return this.hasImages()?this.concept.media.filter(n=>n.mimeType.startsWith("image")):e?[{url:e,caption:"",credit:"",isPrimary:!0,mimeType:""}]:[]}get consultingTaxonomists(){const e=p(this.concept,n=>_.includes(n.linkName));return v.sortBy(e,n=>n.linkValue)}get references(){const e=p(this.concept,n=>x.includes(n.linkName));return v.sortBy(e,n=>n.linkValue)}get descriptions(){return p(this.concept,e=>N.includes(e.linkName))}get geographicInfo(){const e=new Map([["dsg-range","Ocean range (global)"],["dsg-depth-distribution","Published depth range"]]),n=p(this.concept,s=>S.includes(s.linkName));return M(n,e),n}get otherDescriptions(){return p(this.concept,e=>!N.includes(e.linkName)&&!x.includes(e.linkName)&&!S.includes(e.linkName)&&!_.includes(e.linkName))}}class W{constructor(e){h(this,"url");this.url=e}findTree(e){return this.treeUp(e)}findAllContaining(e){return fetch(this.url+"/concept/find/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json()).then(n=>F(n))}findByConceptName(e){return fetch(this.url+"/concept/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}findParentByConceptName(e){return fetch(this.url+"/concept/parent/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}findRepresentativeImagesByName(e,n=12){return fetch(this.url+"/dsg/images/representative/"+encodeURIComponent(e)+"?limit="+n,{mode:"cors"}).then(s=>s.json())}findSiblings(e){return fetch(this.url+"/phylogeny/siblings/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}listAllConcepts(){return fetch(this.url+"/concept",{mode:"cors"}).then(e=>e.json())}listAncestors(e){return fetch(this.url+"/phylogeny/basic/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}listChildren(e){return fetch(this.url+"/concept/children/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}listDescendants(e){return fetch(this.url+"/phylogeny/taxa/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}treeDown(e){return fetch(this.url+"/phylogeny/down/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}treeUp(e){return fetch(this.url+"/phylogeny/up/"+encodeURIComponent(e),{mode:"cors"}).then(n=>n.json())}accumulateNames(e,n=""){switch(n){case"parent":return this.findByConceptName(e).then(s=>this.findParentByConceptName(e).then(i=>C([s,i])));case"children":return this.findByConceptName(e).then(s=>this.listChildren(e).then(i=>(i.push(s),C(i))));case"siblings":return this.findByConceptName(e).then(s=>this.findSiblings(e).then(i=>(i.push(s),C(i))));case"descendants":return this.listDescendants(e).then(s=>z(s));default:return this.findByConceptName(e).then(s=>new K(s).names())}}listLinks(){return fetch(this.url+"/links",{mode:"cors"}).then(e=>e.json())}}const G=l("oni",()=>{const t=D(),e=f(()=>k("oni",t.config)),n=f(()=>new W(e.value)),s=m(()=>n.value.listAllConcepts()),i=m(()=>n.value.listLinks().then(r=>r.filter(u=>!u.linkName.startsWith("dsg-")))),o=f(()=>{var r;return E.uniq((r=i.value)==null?void 0:r.map(u=>u.linkName)).sort()});return{url:e,api:n,concepts:s,links:i,linkNames:o}});function Z(){const t=[],e=T().buildColumnConstraints(),n=y().buildColumnConstraints(),s=g().buildColumnConstraints(),i=A().buildColumnConstraints(),o=O().buildColumnConstraints(),r=Q().buildColumnConstraints(),u=L().buildColumnConstraints(),c=U().buildColumnConstraints(),d=q().buildColumnConstraints(),B=b().buildColumnConstraints();return t.push(...e),t.push(...n),t.push(...s),t.push(...i),t.push(...o),t.push(...r),t.push(...u),t.push(...c),t.push(...d),t.push(...B),t}function H(){return I().buildSelect()}function se(){A().reset(),R().reset(),y().reset(),L().reset(),O().reset(),Q().reset(),U().reset(),T().reset(),q().reset(),g().reset(),I().reset(),b().reset()}const T=l("selectedConcepts",()=>{const t=a([]),e=G();function n(r,u){const c={concept:r,extendTo:u,conceptNames:[]};e.api.accumulateNames(r,u).then(d=>{c.conceptNames=d,t.value.push(c)})}function s(){t.value=[]}function i(r){t.value.splice(r,1)}function o(){if(t.value.length!==0){const r=[];return t.value.forEach(c=>{r.push(...c.conceptNames)}),[{column:"concept",in:Array.from(new Set(r))}]}return[]}return{selectedConcepts:t,add:n,remove:i,reset:s,buildColumnConstraints:o}}),R=l("association",()=>{const t=a([]),e=a(!1),n=a(!1);function s(u){t.value.push(u)}function i(){t.value=[]}function o(u){t.value.splice(u,1)}function r(){return t.value.length>0?e.value?t.value.map(u=>({column:"link_name",equals:u})):t.value.map(u=>({column:"associations",contains:u})):[]}return{associations:t,exactMatch:e,useAnd:n,add:s,remove:o,reset:i,buildColumnConstraints:r}}),g=l("videoSequenceName",()=>{const t=a([]),e=y();function n(){t.value=[]}function s(r){t.value.splice(r,1)}function i(r){e.reset(),t.value.push(r)}function o(){return t.value.length>0?[{column:"video_sequence_name",in:t.value}]:[]}return{videoSequenceNames:t,add:i,remove:s,reset:n,buildColumnConstraints:o}}),y=l("cameraPlatform",()=>{const t=a([]),e=g();function n(){t.value=[]}function s(r){t.value.splice(r,1)}function i(r){e.reset(),t.value.push(r)}function o(){return t.value.length>0?[{column:"camera_platform",in:t.value}]:[]}return{cameraPlatforms:t,add:i,remove:s,reset:n,buildColumnConstraints:o}}),A=l("activities",()=>{const t=a([]);function e(){t.value=[]}function n(o){t.value.splice(o,1)}function s(o){t.value.push(o)}function i(){return t.value.length>0?[{column:"activity",in:t.value}]:[]}return{activities:t,add:s,remove:n,reset:e,buildColumnConstraints:i}}),O=l("groups",()=>{const t=a([]);function e(){t.value=[]}function n(o){t.value.splice(o,1)}function s(o){t.value.push(o)}function i(){return t.value.length>0?[{column:"observation_group",in:t.value}]:[]}return{groups:t,add:s,remove:n,reset:e,buildColumnConstraints:i}}),Q=l("observers",()=>{const t=a([]);function e(){t.value=[]}function n(o){t.value.splice(o,1)}function s(o){t.value.push(o)}function i(){return t.value.length>0?[{column:"observer",in:t.value}]:[]}return{observers:t,add:s,remove:n,reset:e,buildColumnConstraints:i}}),L=l("chiefScientists",()=>{const t=a([]);function e(){t.value=[]}function n(o){t.value.splice(o,1)}function s(o){t.value.push(o)}function i(){return t.value.length>0?[{column:"chief_scientist",in:t.value}]:[]}return{chiefScientists:t,add:s,remove:n,reset:e,buildColumnConstraints:i}}),U=l("region",()=>{const t=a({minLatitude:null,maxLatitude:null,minLongitude:null,maxLongitude:null,minDepth:null,maxDepth:null});function e(){t.value={minLatitude:null,maxLatitude:null,minLongitude:null,maxLongitude:null,minDepth:null,maxDepth:null}}function n(r){t.value={...r}}function s(r){t.value.minDepth=r}function i(r){t.value.maxDepth=r}function o(){const r=[];return t.value.minLatitude!==void 0&&t.value.minLatitude!==null&&r.push({column:"latitude",min:t.value.minLatitude}),t.value.maxLatitude!==void 0&&t.value.maxLatitude!==null&&r.push({column:"latitude",max:t.value.maxLatitude}),t.value.minLongitude!==void 0&&t.value.minLongitude!==null&&r.push({column:"longitude",min:t.value.minLongitude}),t.value.maxLongitude!==void 0&&t.value.maxLongitude!==null&&r.push({column:"longitude",max:t.value.maxLongitude}),t.value.minDepth!==void 0&&t.value.minDepth!==null&&(console.log("minDepth",t.value.minDepth),r.push({column:"depth_meters",min:t.value.minDepth})),t.value.maxDepth!==void 0&&t.value.maxDepth!==null&&r.push({column:"depth_meters",max:t.value.maxDepth}),r}return{bounds:t,setBounds:n,reset:e,setMinDepth:s,setMaxDepth:i,buildColumnConstraints:o}}),q=l("time",()=>{const t=a({startTimestamp:null,endTimestamp:null});function e(){t.value={startTimestamp:null,endTimestamp:null}}function n(o){t.value.startTimestamp=o}function s(o){t.value.endTimestamp=o}function i(){let o=t.value.startTimestamp,r=t.value.endTimestamp;return o===null&&r===null?[]:(o||(o=new Date("1900-01-01T00:00:00Z")),r||(r=new Date(Date.now())),[{column:"index_recorded_timestamp",between:[o.toISOString(),r.toISOString()]}])}return{bounds:t,setStartTimestamp:n,setEndTimestamp:s,reset:e,buildColumnConstraints:i}}),I=l("selectedColumns",()=>{const t=["concept","depth_meters","image_url","imaged_moment_uuid","index_elapsed_time_millis","index_recorded_timestamp","latitude","longitude","observation_group","observation_uuid","observer","video_sequence_name","video_uri","associations"],e=a(t);function n(){s(t)}function s(o){e.value=o}function i(){return e.value}return{selectableColumns:e,setColumns:s,reset:n,buildSelect:i}}),b=l("decorators",()=>{const t=a(!1),e=a(!1),n=a(!0);function s(){return t.value?[{column:"image_url",isnull:!1}]:[]}function i(){t.value=!1,e.value=!1,n.value=!0}return{imagesOnly:t,concurrentObservations:e,relatedAssociations:n,reset:i,buildColumnConstraints:s}});function X(t){return Object.entries(t).filter(([,e])=>!!e).filter(([,e])=>typeof e!="object"||Array.isArray(e)||Object.keys(e).length>0).reduce((e,[n,s])=>({...e,[n]:s}),{})}class Y{constructor(e){h(this,"url");this.url=e}executeQuery(e,n){return fetch(e,{method:"POST",mode:"cors",body:JSON.stringify(X(n))}).then(s=>s.json()).then(s=>s.content)}compareAnnotations(e,n){let s=e.recorded_timestamp;s==null&&(s="1900-01-01T00:00:00Z");let i=n.recorded_timestamp;return i==null&&(i="1900-01-01T00:00:00Z"),s.localeCompare(i)}async pagedSearch(e,n){const s=[],i=await this.count(e),o=Math.ceil(i.count/n);for(let r=0;r<o;r++){e.limit=n,e.offset=n*r;const u=await this.search(e);s.push(...u)}return s.sort(this.compareAnnotations),s}count(e){return this.executeQuery(`${this.url}/fast/count`,e)}geoRange(e){return this.executeQuery(`${this.url}/fast/georange`,e)}depthHistogram(e,n=100){return this.executeQuery(`${this.url}/analysis/histogram/depth?size=${n}`,e)}timeHistogram(e,n=180){return this.executeQuery(`${this.url}/analysis/histogram/time?size=${n}`,e).then(s=>{const o=s.content,r=o.bins_min.map(c=>new Date(Date.parse(c))),u=o.bins_max.map(c=>new Date(Date.parse(c)));return{bins_min:r,bins_max:u,values:o.values}})}search(e){return this.executeQuery(`${this.url}/fast/`,e)}images(e){const n=`${this.url}/fast/concept/images/${encodeURIComponent(e)}?data=true`;return fetch(n,{mode:"cors"}).then(s=>s.json())}runUsingQuery(e){return fetch(`${this.url}/query/download`,{method:"POST",mode:"cors",body:JSON.stringify(e)}).then(n=>n.ok?n:Promise.reject(n)).then(n=>n.text().then(s=>s.split(`
`)).then(s=>s.map(i=>i.trim())).then(s=>s.filter(i=>i&&i!==""&&i!=="null")))}countUsingQuery(e){return fetch(`${this.url}/query/count`,{method:"POST",mode:"cors",body:JSON.stringify(e)}).then(n=>n.ok?n.json():Promise.reject(n))}async pageUsingQuery(e,n,s=()=>{}){s(0);const i=await this.runUsingQuery(e);return s(100),i}listQueryColumns(){return fetch(`${this.url}/query/columns`,{mode:"cors"}).then(e=>e.json())}listActivities(){return fetch(`${this.url}/observations/activities`,{mode:"cors"}).then(e=>e.json())}listGroups(){return fetch(`${this.url}/observations/groups`,{mode:"cors"}).then(e=>e.json())}listObservers(){const e={select:["observer"],distinct:!0,orderby:["observer"]};return this.runUsingQuery(e).then(n=>n.slice(1))}listChiefScientists(){const e={select:["chief_scientist"],distinct:!0,orderby:["chief_scientist"]};return this.runUsingQuery(e).then(n=>n.slice(1).sort())}}const ie=l("annosaurus",()=>{const t=D(),e=f(()=>k("annosaurus",t.config)),n=f(()=>new Y(e.value)),s=m(async()=>n.value.listActivities()),i=m(async()=>n.value.listGroups()),o=m(async()=>n.value.listObservers()),r=m(async()=>n.value.listChiefScientists()),u=m(async()=>(await n.value.listQueryColumns()).map(d=>d.columnName).sort());return{url:e,api:n,activities:s,groups:i,observers:o,chiefScientists:r,selectableColumns:u}});class re{constructor(e){h(this,"api");this.api=e}async runQuery(e=()=>{}){const n=this.buildQueries(),s=V();s.reset();let i=0;for(const o of n)await this.api.pageUsingQuery(o,5e5,e).then(r=>{i===0?s.appendRawQueryResults(r):s.appendRawQueryResults(r.slice(1)),i++}).catch(r=>{console.error(r)})}buildQueries(){const e=b(),n=H(),s=Z(),i={select:n,where:s,distinct:!0,strict:!1,concurrentObservations:e.concurrentObservations,relatedAssociations:e.relatedAssociations},o=R(),r=o.buildColumnConstraints();return r.length>0?o.useAnd?(i.where.push(...r),[i]):r.map(u=>{const c=JSON.parse(JSON.stringify(i));return c.where.push(u),c}):[i]}}export{re as Q,T as a,R as b,g as c,y as d,ie as e,A as f,O as g,Q as h,L as i,b as j,U as k,q as l,I as m,se as r,G as u};
