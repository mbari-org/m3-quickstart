var P=Object.defineProperty;var $=(n,e,t)=>e in n?P(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var h=(n,e,t)=>$(n,typeof e!="symbol"?e+"":e,t);import{j as l,B as k,l as f,C as w,k as m,r as c}from"./index-Bzw5iiEC.js";import{l as v,_ as E,u as M}from"./query-results-DX3PRUWY.js";function V(n){const e=[];return n.forEach(t=>j(t,e)),[...new Set(e)].sort()}function j(n,e=[]){return e.push(n.name),e.push(...n.alternativeNames||[]),n.children&&n.children.forEach(t=>j(t,e)),e}function g(n){const e=n.reduce((t,s)=>T(s,t),[]);return[...new Set(e)].sort()}function T(n,e){return e.push(n.name),e.push(...n.alternateNames||[]),e}function F(n){if(n){const e=v.sortBy(n,t=>t.name);return v.sortedUniqBy(e,t=>t.name)}return n}const S=["dsg-depth-distribution","dsg-range"],x=["dsg-size","dsg-color","dsg-shape","dsg-description"],_=["dsg-reference"],D=["dsg-consulting-taxonomist"];function J(n){return n?n.map(e=>{let t=e.linkName;return e.linkName.startsWith("dsg-")&&(t=e.linkName.substring(4)),{displayedName:t.split("-").join(" "),linkValue:e.linkValue,linkName:e.linkName,toConcept:e.toConcept}}):[]}function p(n,e){if(n&&n.descriptors){let t=n.descriptors.filter(s=>e(s));return t=v.sortBy(t,s=>s.linkName),J(t)}return[]}function K(n,e){n.forEach(t=>{e.has(t.linkName)&&(t.displayedName=e.get(t.linkName))})}class W{constructor(e){h(this,"concept");this.concept=e}names(){const e=T(this.concept,[]);return[...new Set(e)].sort()}author(){const e=this.concept;if(e!=null&&e.author){const t=e.author;return t!=null&&t.startsWith("(")?t:`(${t})`}return""}primaryMedia(e){const t=this.concept;let s=e;if(t&&t.media&&t.media.length>0){const i=t.media.filter(o=>o.isPrimary);i.length>0&&(s=i[0].url)}return s}hasImages(){return this.concept&&this.concept.media&&this.concept.media.length>0}images(e=""){return this.hasImages()?this.concept.media.filter(t=>t.mimeType.startsWith("image")):e?[{url:e,caption:"",credit:"",isPrimary:!0,mimeType:""}]:[]}get consultingTaxonomists(){const e=p(this.concept,t=>D.includes(t.linkName));return v.sortBy(e,t=>t.linkValue)}get references(){const e=p(this.concept,t=>_.includes(t.linkName));return v.sortBy(e,t=>t.linkValue)}get descriptions(){return p(this.concept,e=>x.includes(e.linkName))}get geographicInfo(){const e=new Map([["dsg-range","Ocean range (global)"],["dsg-depth-distribution","Published depth range"]]),t=p(this.concept,s=>S.includes(s.linkName));return K(t,e),t}get otherDescriptions(){return p(this.concept,e=>!x.includes(e.linkName)&&!_.includes(e.linkName)&&!S.includes(e.linkName)&&!D.includes(e.linkName))}}class G{constructor(e){h(this,"url");this.url=e}findTree(e){return this.treeUp(e)}findAllContaining(e){return fetch(this.url+"/concept/find/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json()).then(t=>F(t))}findByConceptName(e){return fetch(this.url+"/concept/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}findParentByConceptName(e){return fetch(this.url+"/concept/parent/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}findRepresentativeImagesByName(e,t=12){return fetch(this.url+"/dsg/images/representative/"+encodeURIComponent(e)+"?limit="+t,{mode:"cors"}).then(s=>s.json())}findSiblings(e){return fetch(this.url+"/phylogeny/siblings/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}listAllConcepts(){return fetch(this.url+"/concept",{mode:"cors"}).then(e=>e.json())}listAncestors(e){return fetch(this.url+"/phylogeny/basic/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}listChildren(e){return fetch(this.url+"/concept/children/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}listDescendants(e){return fetch(this.url+"/phylogeny/taxa/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}treeDown(e){return fetch(this.url+"/phylogeny/down/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}treeUp(e){return fetch(this.url+"/phylogeny/up/"+encodeURIComponent(e),{mode:"cors"}).then(t=>t.json())}accumulateNames(e,t=""){switch(t){case"parent":return this.findByConceptName(e).then(s=>this.findParentByConceptName(e).then(i=>g([s,i])));case"children":return this.findByConceptName(e).then(s=>this.listChildren(e).then(i=>(i.push(s),g(i))));case"siblings":return this.findByConceptName(e).then(s=>this.findSiblings(e).then(i=>(i.push(s),g(i))));case"descendants":return this.listDescendants(e).then(s=>V(s));default:return this.findByConceptName(e).then(s=>new W(s).names())}}listLinks(){return fetch(this.url+"/links",{mode:"cors"}).then(e=>e.json())}}const Z=l("oni",()=>{const n=k(),e=f(()=>w("oni",n.config)),t=f(()=>new G(e.value)),s=m(()=>t.value.listAllConcepts()),i=m(()=>t.value.listLinks().then(r=>r.filter(u=>!u.linkName.startsWith("dsg-")))),o=f(()=>{var r;return E.uniq((r=i.value)==null?void 0:r.map(u=>u.linkName)).sort()});return{url:e,api:t,concepts:s,links:i,linkNames:o}});function z(){const n=[],e=Q().buildColumnConstraints(),t=b().buildColumnConstraints(),s=y().buildColumnConstraints(),i=A().buildColumnConstraints(),o=O().buildColumnConstraints(),r=L().buildColumnConstraints(),u=U().buildColumnConstraints(),a=I().buildColumnConstraints(),d=B().buildColumnConstraints(),C=N().buildColumnConstraints();return n.push(...e),n.push(...t),n.push(...s),n.push(...i),n.push(...o),n.push(...r),n.push(...u),n.push(...a),n.push(...d),n.push(...C),n}function H(){return q().buildSelect()}function se(){A().reset(),R().reset(),b().reset(),U().reset(),O().reset(),L().reset(),I().reset(),Q().reset(),B().reset(),y().reset(),q().reset(),N().reset()}const Q=l("selectedConcepts",()=>{const n=c([]),e=Z();function t(r,u){const a={concept:r,extendTo:u,conceptNames:[]};e.api.accumulateNames(r,u).then(d=>{a.conceptNames=d,n.value.push(a)})}function s(){n.value=[]}function i(r){n.value.splice(r,1)}function o(){if(n.value.length!==0){const r=[];return n.value.forEach(a=>{r.push(...a.conceptNames)}),[{column:"concept",in:Array.from(new Set(r))}]}return[]}return{selectedConcepts:n,add:t,remove:i,reset:s,buildColumnConstraints:o}}),R=l("association",()=>{const n=c([]),e=c(!1),t=c(!1);function s(u){n.value.push(u)}function i(){n.value=[]}function o(u){n.value.splice(u,1)}function r(){return n.value.length>0?e.value?n.value.map(u=>({column:"link_name",equals:u})):n.value.map(u=>({column:"associations",contains:u})):[]}return{associations:n,exactMatch:e,useAnd:t,add:s,remove:o,reset:i,buildColumnConstraints:r}}),y=l("videoSequenceName",()=>{const n=c([]),e=b();function t(){n.value=[]}function s(r){n.value.splice(r,1)}function i(r){e.reset(),n.value.push(r)}function o(){return n.value.length>0?[{column:"video_sequence_name",in:n.value}]:[]}return{videoSequenceNames:n,add:i,remove:s,reset:t,buildColumnConstraints:o}}),b=l("cameraPlatform",()=>{const n=c([]),e=y();function t(){n.value=[]}function s(r){n.value.splice(r,1)}function i(r){e.reset(),n.value.push(r)}function o(){return n.value.length>0?[{column:"camera_platform",in:n.value}]:[]}return{cameraPlatforms:n,add:i,remove:s,reset:t,buildColumnConstraints:o}}),A=l("activities",()=>{const n=c([]);function e(){n.value=[]}function t(o){n.value.splice(o,1)}function s(o){n.value.push(o)}function i(){return n.value.length>0?[{column:"activity",in:n.value}]:[]}return{activities:n,add:s,remove:t,reset:e,buildColumnConstraints:i}}),O=l("groups",()=>{const n=c([]);function e(){n.value=[]}function t(o){n.value.splice(o,1)}function s(o){n.value.push(o)}function i(){return n.value.length>0?[{column:"observation_group",in:n.value}]:[]}return{groups:n,add:s,remove:t,reset:e,buildColumnConstraints:i}}),L=l("observers",()=>{const n=c([]);function e(){n.value=[]}function t(o){n.value.splice(o,1)}function s(o){n.value.push(o)}function i(){return n.value.length>0?[{column:"observer",in:n.value}]:[]}return{observers:n,add:s,remove:t,reset:e,buildColumnConstraints:i}}),U=l("chiefScientists",()=>{const n=c([]);function e(){n.value=[]}function t(o){n.value.splice(o,1)}function s(o){n.value.push(o)}function i(){return n.value.length>0?[{column:"chief_scientist",in:n.value}]:[]}return{chiefScientists:n,add:s,remove:t,reset:e,buildColumnConstraints:i}}),I=l("region",()=>{const n=c({minLatitude:null,maxLatitude:null,minLongitude:null,maxLongitude:null,minDepth:null,maxDepth:null});function e(){n.value={minLatitude:null,maxLatitude:null,minLongitude:null,maxLongitude:null,minDepth:null,maxDepth:null}}function t(r){n.value={...r}}function s(r){n.value.minDepth=r}function i(r){n.value.maxDepth=r}function o(){const r=[];return n.value.minLatitude!==void 0&&n.value.minLatitude!==null&&r.push({column:"latitude",min:n.value.minLatitude}),n.value.maxLatitude!==void 0&&n.value.maxLatitude!==null&&r.push({column:"latitude",max:n.value.maxLatitude}),n.value.minLongitude!==void 0&&n.value.minLongitude!==null&&r.push({column:"longitude",min:n.value.minLongitude}),n.value.maxLongitude!==void 0&&n.value.maxLongitude!==null&&r.push({column:"longitude",max:n.value.maxLongitude}),n.value.minDepth!==void 0&&n.value.minDepth!==null&&(console.log("minDepth",n.value.minDepth),r.push({column:"depth_meters",min:n.value.minDepth})),n.value.maxDepth!==void 0&&n.value.maxDepth!==null&&r.push({column:"depth_meters",max:n.value.maxDepth}),r}return{bounds:n,setBounds:t,reset:e,setMinDepth:s,setMaxDepth:i,buildColumnConstraints:o}}),B=l("time",()=>{const n=c({startTimestamp:null,endTimestamp:null});function e(){n.value={startTimestamp:null,endTimestamp:null}}function t(o){n.value.startTimestamp=o}function s(o){n.value.endTimestamp=o}function i(){let o=n.value.startTimestamp,r=n.value.endTimestamp;return o===null&&r===null?[]:(o||(o=new Date("1900-01-01T00:00:00Z")),r||(r=new Date(Date.now())),[{column:"index_recorded_timestamp",between:[o.toISOString(),r.toISOString()]}])}return{bounds:n,setStartTimestamp:t,setEndTimestamp:s,reset:e,buildColumnConstraints:i}}),q=l("selectedColumns",()=>{const n=["concept","depth_meters","image_url","imaged_moment_uuid","index_elapsed_time_millis","index_recorded_timestamp","latitude","longitude","observation_group","observation_uuid","observer","video_sequence_name","video_uri","associations"],e=c(n);function t(){s(n)}function s(o){e.value=o}function i(){return e.value}return{selectableColumns:e,setColumns:s,reset:t,buildSelect:i}}),N=l("decorators",()=>{const n=c(!1),e=c(!1),t=c(!0);function s(){return n.value?[{column:"image_url",isnull:!1}]:[]}function i(){n.value=!1,e.value=!1,t.value=!0}return{imagesOnly:n,concurrentObservations:e,relatedAssociations:t,reset:i,buildColumnConstraints:s}});function X(n){return Object.entries(n).filter(([,e])=>!!e).filter(([,e])=>typeof e!="object"||Array.isArray(e)||Object.keys(e).length>0).reduce((e,[t,s])=>({...e,[t]:s}),{})}class Y{constructor(e){h(this,"url");this.url=e}executeQuery(e,t){return fetch(e,{method:"POST",mode:"cors",body:JSON.stringify(X(t))}).then(s=>s.json()).then(s=>s.content)}compareAnnotations(e,t){let s=e.recorded_timestamp;s==null&&(s="1900-01-01T00:00:00Z");let i=t.recorded_timestamp;return i==null&&(i="1900-01-01T00:00:00Z"),s.localeCompare(i)}async pagedSearch(e,t){const s=[],i=await this.count(e),o=Math.ceil(i.count/t);for(let r=0;r<o;r++){e.limit=t,e.offset=t*r;const u=await this.search(e);s.push(...u)}return s.sort(this.compareAnnotations),s}count(e){return this.executeQuery(`${this.url}/fast/count`,e)}geoRange(e){return this.executeQuery(`${this.url}/fast/georange`,e)}depthHistogram(e,t=100){return this.executeQuery(`${this.url}/analysis/histogram/depth?size=${t}`,e)}timeHistogram(e,t=180){return this.executeQuery(`${this.url}/analysis/histogram/time?size=${t}`,e).then(s=>{const o=s.content,r=o.bins_min.map(a=>new Date(Date.parse(a))),u=o.bins_max.map(a=>new Date(Date.parse(a)));return{bins_min:r,bins_max:u,values:o.values}})}search(e){return this.executeQuery(`${this.url}/fast/`,e)}images(e){const t=`${this.url}/fast/concept/images/${encodeURIComponent(e)}?data=true`;return fetch(t,{mode:"cors"}).then(s=>s.json())}runUsingQuery(e){return fetch(`${this.url}/query/run`,{method:"POST",mode:"cors",body:JSON.stringify(e)}).then(t=>t.ok?t:Promise.reject(t)).then(t=>t.text().then(s=>s.split(`
`)).then(s=>s.map(i=>i.trim())).then(s=>s.filter(i=>i&&i!==""&&i!=="null")))}countUsingQuery(e){return fetch(`${this.url}/query/count`,{method:"POST",mode:"cors",body:JSON.stringify(e)}).then(t=>t.ok?t.json():Promise.reject(t))}async pageUsingQuery(e,t,s=()=>{}){s(0);const i=[],o=await this.countUsingQuery(e),r=Math.ceil(o.count/t);for(let u=0;u<r;u++){e.limit=t,e.offset=t*u;const a=await this.runUsingQuery(e);if(u===0)i.push(...a);else{const[d,...C]=a;i.push(...C)}s((u+1)/r)}return i}listQueryColumns(){return fetch(`${this.url}/query/columns`,{mode:"cors"}).then(e=>e.json())}listActivities(){return fetch(`${this.url}/observations/activities`,{mode:"cors"}).then(e=>e.json())}listGroups(){return fetch(`${this.url}/observations/groups`,{mode:"cors"}).then(e=>e.json())}listObservers(){const e={select:["observer"],distinct:!0,orderby:["observer"]};return this.runUsingQuery(e).then(t=>t.slice(1))}listChiefScientists(){const e={select:["chief_scientist"],distinct:!0,orderby:["chief_scientist"]};return this.runUsingQuery(e).then(t=>t.slice(1).sort())}}const ie=l("annosaurus",()=>{const n=k(),e=f(()=>w("annosaurus",n.config)),t=f(()=>new Y(e.value)),s=m(async()=>t.value.listActivities()),i=m(async()=>t.value.listGroups()),o=m(async()=>t.value.listObservers()),r=m(async()=>t.value.listChiefScientists()),u=m(async()=>(await t.value.listQueryColumns()).map(d=>d.columnName).sort());return{url:e,api:t,activities:s,groups:i,observers:o,chiefScientists:r,selectableColumns:u}});class re{constructor(e){h(this,"api");this.api=e}async runQuery(e=()=>{}){const t=this.buildQueries(),s=M();s.reset();let i=0;for(const o of t)await this.api.pageUsingQuery(o,5e3,e).then(r=>{i===0?s.appendRawQueryResults(r):s.appendRawQueryResults(r.slice(1)),i++}).catch(r=>{console.error(r)})}buildQueries(){const e=N(),t=H(),s=z(),i={select:t,where:s,distinct:!0,strict:!1,concurrentObservations:e.concurrentObservations,relatedAssociations:e.relatedAssociations},o=R(),r=o.buildColumnConstraints();return r.length>0?o.useAnd?(i.where.push(...r),[i]):r.map(u=>{const a=JSON.parse(JSON.stringify(i));return a.where.push(u),a}):[i]}}export{re as Q,Q as a,R as b,y as c,b as d,ie as e,A as f,O as g,L as h,U as i,N as j,I as k,B as l,q as m,se as r,Z as u};
